

services:

  nginx-proxy:
  # config created with https://www.digitalocean.com/community/tools/nginx
    image: nginx:1.24
    deploy:
        replicas: 1
        restart_policy:
          condition: unless-stopped
    networks:
      - data-analysis-platform_runner
    environment:
      - TZ=Europe/Amsterdam
    ports:
{% if use_tls %}
      - 4430:443
{% else %}
      - 8080:80
{% endif %}
    profiles:
      - first-stage
      - all
    volumes:
    # data
      - type: bind
        source: {{ paths.data }}/{{ host_prefix }}_nginx-proxy/nginx-runner.conf
        target: /etc/nginx/nginx.conf
    # secrets
{% if use_tls %}
      - type: bind
        source: {{ paths.secrets }}/fullchain.pem
        target: /etc/nginx/ssl/fullchain.pem
      - type: bind
        source: {{ paths.secrets }}/privkey.pem
        target: /etc/nginx/ssl/privkey.pem
      - type: bind
        source: {{ paths.secrets }}/dhparam.pem
        target: /etc/nginx/dhparam.pem
{% endif %}

  portainer-runner:
    # refs:
    # - https://docs.portainer.io/advanced/reverse-proxy/nginx
    # - https://docs.portainer.io/start/install-ce/server/docker/linux
    image: portainer/portainer-ce:linux-amd64-2.18.2
    deploy:
        replicas: 1
        restart_policy:
          condition: unless-stopped
    environment:
      - TZ=Europe/Amsterdam
      - VIRTUAL_HOST=portainer-runner.{{ project_domain_name }}
      - VIRTUAL_PORT=9000
    networks:
      data-analysis-platform_runner:
        aliases:
          - portainer-runner.{{ project_domain_name }}
    profiles:
      - first-stage
      - all
    volumes:
    # data
      - type: bind
        source: {{ paths.data }}/{{ host_prefix }}_portainer/data
        target: /data
    # docker socket
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock



  gitlab-runner-generic-1:
    image: gitlab/gitlab-runner:ubuntu-v15.11.0
    deploy:
        replicas: 1
        restart_policy:
          condition: unless-stopped
    environment:
      - TZ=Europe/Amsterdam
    networks:
      - data-analysis-platform_runner
{% if use_static_dns %}
    extra_hosts:
{% for host in extra_hosts %}
      - "{{ host.name }}:{{ host.ip }}"
{% endfor %}
{% endif %}
    profiles:
      - second-stage
      - all
    volumes:
    # config
      - type: bind
        source: {{ paths.data }}/{{ host_prefix }}_gitlab-runner-generic-1/etc.gitlab-runner
        target: /etc/gitlab-runner
    # docker socket to start containers
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
  
networks:
  data-analysis-platform_runner:
    attachable: true
    name: data-analysis-platform_runner
    ipam:
      driver: default
      config:
      - subnet: 172.16.200.0/24

